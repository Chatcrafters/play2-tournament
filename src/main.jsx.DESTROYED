// SIMPLE WINDOW-SAFE FIX
if (typeof window !== "undefined") {
  window.console = window.console || {log:function(){},warn:function(){},error:function(){}};
  window.globalTranslationFallback = function(key) { return key || "NO_TRANSLATION"; };
  window.useTranslation = function() { return { t: window.globalTranslationFallback, language: "de" }; };
}

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'

ReactDOM.
// NUKLEAR-FIX: Globaler useTranslation Fallback
// removed console.log
(typeof window !== "undefined" ? window.globalTranslationFallback : null) || ((key) => key) = (key) => key || 'NO_TRANSLATION'
if (typeof (typeof window !== "undefined" ? window.useTranslation : null) || (() => ({t: (key) => key})) === 'undefined') {
  (typeof window !== "undefined" ? window.useTranslation : null) || (() => ({t: (key) => key})) = () => ({ t: (typeof window !== "undefined" ? window.globalTranslationFallback : null) || ((key) => key), language: 'de' })
}
window.addEventListener('error', (e) => {
  if (e.error && e.error.message && e.error.message.includes('useTranslation')) {
    // removed console.warn; e.preventDefault(); return false
  }
})
createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)







